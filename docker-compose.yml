version: '3.5'
services:
  # Frontend React.js
  frontend:
    build:
      context: ./frontend # Le chemin vers le répertoire du code source React.js
      # dockerfile: dockerfile
    ports:
      - "3000:3000" # Port pour le serveur de développement React
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend:/app/
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true=value
    env_file:
      - .env
    # working_dir: /app


  # Backend Nest.js
  backend:
    build:
      context: ./backend # Le chemin vers le répertoire du code source Nest.js
    ports:
      - "4000:4000" # Port pour le serveur Nest.js
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - ./backend:/app/
      - /app/node_modules
    # working_dir: /app

  # Serveur nginx
  nginx:
    build: 
      context: nginx
    container_name: nginx
    # restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - app-network
    depends_on:
       - backend
       - frontend

  # PostgreSQL
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432" # Port pour PostgreSQL
    env_file:
      - .env
    # environment:
    #   POSTGRES_DB: myappdb # Remplacez par le nom de votre base de données
    #   POSTGRES_USER: myappuser # Remplacez par le nom d'utilisateur de la base de données
    #   POSTGRES_PASSWORD: myapppassword # Remplacez par le mot de passe de la base de données
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # restart: always 

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
